{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/reservation-create/reservation-create.component.css","webpack:///./src/app/components/reservation-create/reservation-create.component.html","webpack:///./src/app/components/reservation-create/reservation-create.component.ts","webpack:///./src/app/components/reservation-edit/reservation-edit.component.css","webpack:///./src/app/components/reservation-edit/reservation-edit.component.html","webpack:///./src/app/components/reservation-edit/reservation-edit.component.ts","webpack:///./src/app/components/reservation-list/reservation-list.component.css","webpack:///./src/app/components/reservation-list/reservation-list.component.html","webpack:///./src/app/components/reservation-list/reservation-list.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/api.service.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/auth.interceptor.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/process-httpmsg.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule, CanActivate } from \"@angular/router\";\nimport { AuthGuardService as AuthGuard } from \"./service/auth-guard.service\";\n\nimport { ReservationCreateComponent } from \"./components/reservation-create/reservation-create.component\";\nimport { ReservationListComponent } from \"./components/reservation-list/reservation-list.component\";\nimport { ReservationEditComponent } from \"./components/reservation-edit/reservation-edit.component\";\nimport { LoginComponent } from \"./login/login.component\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"auth\" },\n  { path: \"auth\", component: LoginComponent },\n  {\n    path: \"create-reservation\",\n    component: ReservationCreateComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"edit-reservation/:id\",\n    component: ReservationEditComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"reservations-list\",\n    component: ReservationListComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \".menu-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVudS1zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cbiJdfQ== */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mean-stack-crud-app';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { APP_BASE_HREF } from \"@angular/common\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { ReservationCreateComponent } from \"./components/reservation-create/reservation-create.component\";\nimport { ReservationListComponent } from \"./components/reservation-list/reservation-list.component\";\nimport { ReservationEditComponent } from \"./components/reservation-edit/reservation-edit.component\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\n\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { ApiService } from \"./service/api.service\";\nimport { AuthService } from \"./service/auth.service\";\nimport { AuthGuardService } from \"./service/auth-guard.service\";\nimport {\n  AuthInterceptor,\n  UnauthorizedInterceptor,\n} from \"./service/auth.interceptor\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { HeaderComponent } from \"./header/header.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReservationCreateComponent,\n    ReservationListComponent,\n    ReservationEditComponent,\n    LoginComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatIconModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    ApiService,\n    AuthService,\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UnauthorizedInterceptor,\n      multi: true,\n    },\n    { provide: APP_BASE_HREF, useValue: \"/\" },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzZXJ2YXRpb24tY3JlYXRlL3Jlc2VydmF0aW9uLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-md-4 register-res\\\">\\n    <div class=\\\"card card-outline-secondary\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Add Reservation</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"reservationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Customer Name</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"name\\\"\\n              placeholder=\\\"Customer Name\\\"\\n            />\\n\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.name.errors?.required\\\"\\n            >\\n              Customer Name is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"phone\\\">Phone Number</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"tel\\\"\\n              formControlName=\\\"phone\\\"\\n              placeholder=\\\"Phone Number\\\"\\n            />\\n\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.count.errors?.required\\\"\\n            >\\n              Enter Phone Number\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"count\\\">Number of People</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"number\\\"\\n              formControlName=\\\"count\\\"\\n              placeholder=\\\"Number of People\\\"\\n            />\\n\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.count.errors?.required\\\"\\n            >\\n              Enter Number of People.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"time\\\">Arrival Time</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"time\\\"\\n              formControlName=\\\"time\\\"\\n              placeholder=\\\"Arrival Time\\\"\\n            />\\n\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.time.errors?.required\\\"\\n            >\\n              Time is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"table\\\">Table Number</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"number\\\"\\n              formControlName=\\\"table\\\"\\n              placeholder=\\\"Table Number\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success btn-lg col-5 ml-4\\\" type=\\\"submit\\\">\\n              Add Reservation\\n            </button>\\n            <button\\n              class=\\\"btn btn-danger btn-lg col-5 ml-4\\\"\\n              routerLink=\\\"/reservations-list\\\"\\n            >\\n              Cancel\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Router } from \"@angular/router\";\nimport { ApiService } from \"../../service/api.service\";\nimport { Component, OnInit, NgZone } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-reservation-create\",\n  templateUrl: \"./reservation-create.component.html\",\n  styleUrls: [\"./reservation-create.component.css\"],\n})\nexport class ReservationCreateComponent implements OnInit {\n  submitted = false;\n  reservationForm: FormGroup;\n  alert = false;\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private apiService: ApiService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  createForm() {\n    this.reservationForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required, Validators.pattern]],\n      count: [\"\", [Validators.required]],\n      time: [\"\", [Validators.required]],\n      table: [\"\", []],\n    });\n  }\n\n  get myForm() {\n    return this.reservationForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.alert = true;\n    if (!this.reservationForm.valid) {\n      return false;\n    } else {\n      this.apiService.createReservation(this.reservationForm.value).subscribe(\n        (res) => {\n          console.log(\"Reservation successfully created!\");\n          this.apiService.saveAlert(this.alert);\n          this.ngZone.run(() =>\n            this.router.navigateByUrl(\"/reservations-list\")\n          );\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzZXJ2YXRpb24tZWRpdC9yZXNlcnZhdGlvbi1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-md-4 register-employee\\\">\\n    <div class=\\\"card card-outline-secondary\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Edit Reservation</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Customer Name</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"name\\\"\\n              placeholder=\\\"Customer Name\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.name.errors?.required\\\"\\n            >\\n              Customer Name is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"phone\\\">Phone Number</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"tel\\\"\\n              formControlName=\\\"phone\\\"\\n              placeholder=\\\"Phone Number\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.count.errors?.required\\\"\\n            >\\n              Enter Phone Number\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"count\\\">Number of People</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"number\\\"\\n              formControlName=\\\"count\\\"\\n              placeholder=\\\"Number of People\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.count.errors?.required\\\"\\n            >\\n              Enter Number of People.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"time\\\">Arrival Time</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"time\\\" />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && myForm.time.errors?.required\\\"\\n            >\\n              Time is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"table\\\">Table Number</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"number\\\"\\n              formControlName=\\\"table\\\"\\n              placeholder=\\\"Table Number\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success btn-lg col-5 ml-4\\\" type=\\\"submit\\\">\\n              Update\\n            </button>\\n            <button\\n              class=\\\"btn btn-danger btn-lg col-5 ml-4\\\"\\n              routerLink=\\\"/reservations-list\\\"\\n            >\\n              Cancel\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Reservation } from \"../../model/reservation\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApiService } from \"../../service/api.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-reservation-edit\",\n  templateUrl: \"./reservation-edit.component.html\",\n  styleUrls: [\"./reservation-edit.component.css\"],\n})\nexport class ReservationEditComponent implements OnInit {\n  submitted = false;\n  editForm: FormGroup;\n  reservationData: Reservation[];\n  alert: boolean = true;\n\n  constructor(\n    public fb: FormBuilder,\n    private actRoute: ActivatedRoute,\n    private apiService: ApiService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.updateReservation();\n    let id = this.actRoute.snapshot.paramMap.get(\"id\");\n    this.getReservation(id);\n  }\n\n  // Getter to access form control\n  get myForm() {\n    return this.editForm.controls;\n  }\n\n  getReservation(id) {\n    this.apiService.getReservation(id).subscribe((data) => {\n      this.editForm.setValue({\n        name: data[\"name\"],\n        phone: data[\"phone\"],\n        count: data[\"count\"],\n        time: data[\"time\"],\n        table: data[\"table\"],\n      });\n    });\n  }\n\n  updateReservation() {\n    this.editForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required]],\n      count: [\"\", [Validators.required]],\n      time: [\"\", [Validators.required]],\n      table: [\"\", []],\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.alert = true;\n    if (!this.editForm.valid) {\n      return false;\n    } else {\n      if (window.confirm(\"Confirm Reservation Updation\")) {\n        let id = this.actRoute.snapshot.paramMap.get(\"id\");\n        this.apiService.updateReservation(id, this.editForm.value).subscribe(\n          (res) => {\n            this.apiService.saveAlert(this.alert);\n            this.router.navigateByUrl(\"/reservations-list\");\n            console.log(\"Content updated successfully!\");\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n      }\n    }\n  }\n}\n","module.exports = \"th,\\r\\ntd {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZXNlcnZhdGlvbi1saXN0L3Jlc2VydmF0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Jlc2VydmF0aW9uLWxpc3QvcmVzZXJ2YXRpb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGgsXHJcbnRkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"col-10 offset-1 register-res\\\">\\n  <p *ngIf=\\\"!Reservations\\\" class=\\\"no-data text-center\\\">\\n    There is no reservation added yet!\\n  </p>\\n  <div\\n    *ngIf=\\\"alert\\\"\\n    class=\\\"alert alert-success alert-dismissible fade show\\\"\\n    role=\\\"alert\\\"\\n  >\\n    <strong>Success !</strong> Reservations has been Updated.\\n    <button\\n      (click)=\\\"closeAlert()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"close\\\"\\n      data-dimiss=\\\"alert\\\"\\n      aria-label=\\\"close\\\"\\n    >\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <table class=\\\"table table-bordered\\\" *ngIf=\\\"Reservations\\\">\\n    <thead class=\\\"table-success\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Reservation ID</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Phone Number</th>\\n        <th scope=\\\"col\\\">Number of People</th>\\n        <th scope=\\\"col\\\">Time</th>\\n        <th scope=\\\"col\\\">Table Number</th>\\n        <th scope=\\\"col center\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let res of Reservations; let i = index\\\">\\n        <th scope=\\\"row\\\">{{ res._id }}</th>\\n        <td>{{ res.name }}</td>\\n        <td>{{ res.phone }}</td>\\n        <td>{{ res.count }}</td>\\n        <td>{{ res.time }}</td>\\n        <td>{{ res.table }}</td>\\n        <td class=\\\"text-center edit-block\\\">\\n          <span class=\\\"edit\\\" [routerLink]=\\\"['/edit-reservation/', res._id]\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\">Edit</button>\\n          </span>\\n          <span class=\\\"delete\\\" (click)=\\\"removeReservation(res, i)\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../../service/api.service\";\nimport { Reservation } from \"../../model/reservation\";\n\n@Component({\n  selector: \"app-reservation-list\",\n  templateUrl: \"./reservation-list.component.html\",\n  styleUrls: [\"./reservation-list.component.css\"],\n})\nexport class ReservationListComponent implements OnInit {\n  Reservations: Reservation[];\n  alert = false;\n\n  constructor(private apiService: ApiService) {\n    this.alert = apiService.getAlert();\n    this.readReservation();\n  }\n\n  ngOnInit() {\n    this.apiService\n      .getReservations()\n      .subscribe((Reservations) => (this.Reservations = Reservations));\n  }\n\n  readReservation() {}\n\n  removeReservation(res, index) {\n    if (window.confirm(\"Comfirm Reservation Deletion.\")) {\n      this.apiService.deleteReservation(res._id).subscribe((data) => {\n        this.alert = true;\n        this.apiService.saveAlert(this.alert);\n        this.Reservations.splice(index, 1);\n      });\n    }\n  }\n\n  closeAlert() {\n    this.alert = false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div\\n  class=\\\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\\\"\\n>\\n  <h5 class=\\\"my-0 mr-md-auto font-weight-bold\\\">ONLINE RESERVATION PORTAL</h5>\\n  <nav class=\\\"my-2 my-md-0 mr-md-3\\\">\\n    <a\\n      *ngIf=\\\"username\\\"\\n      class=\\\"btn btn-outline-primary\\\"\\n      routerLinkActive=\\\"active\\\"\\n      routerLink=\\\"/reservations-list\\\"\\n      >View Reservation</a\\n    >\\n  </nav>\\n  <nav class=\\\"my-2 my-md-0 mr-md-3\\\">\\n    <a\\n      *ngIf=\\\"username\\\"\\n      class=\\\"btn btn-outline-primary\\\"\\n      routerLinkActive=\\\"active\\\"\\n      routerLink=\\\"/create-reservation\\\"\\n      >Add Reservation</a\\n    >\\n  </nav>\\n  <a\\n    *ngIf=\\\"username\\\"\\n    class=\\\"btn btn-outline-primary\\\"\\n    routerLink=\\\"/auth\\\"\\n    (click)=\\\"logOut()\\\"\\n  >\\n    Logout</a\\n  >\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../service/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit {\n  subscription: Subscription;\n  username: string = undefined;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.authService.loadUserCredentials();\n    this.subscription = this.authService.getUsername().subscribe((name) => {\n      console.log(name);\n      this.username = name;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  logOut() {\n    this.username = undefined;\n    this.authService.logOut();\n    this.router.navigate([\"/auth\"]);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div\\n  *ngIf=\\\"alert\\\"\\n  class=\\\"container alert alert-success alert-dismissible fade show\\\"\\n  role=\\\"alert\\\"\\n>\\n  <strong>Success !</strong> New Owner Registered.\\n  <button\\n    (click)=\\\"closeAlert()\\\"\\n    type=\\\"button\\\"\\n    class=\\\"close\\\"\\n    data-dimiss=\\\"alert\\\"\\n    aria-label=\\\"close\\\"\\n  >\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-md-4 register-res\\\">\\n    <div class=\\\"card card-outline-secondary\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Owner Login</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"loginForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username/Email</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"username\\\"\\n              placeholder=\\\"Username/Email\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submittedL && myForm.username.errors?.required\\\"\\n            >\\n              Username/Email is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"password\\\"\\n              formControlName=\\\"password\\\"\\n              placeholder=\\\"Password\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submittedL && myForm.password.errors?.required\\\"\\n            >\\n              Password is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\">\\n              Login\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-md-4 register-res\\\">\\n    <div class=\\\"card card-outline-secondary\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Add New Owner</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"signupForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSignup()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"firstname\\\">First Name</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"firstname\\\"\\n              placeholder=\\\"First Name\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && sForm.firstname.errors?.required\\\"\\n            >\\n              First Name is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lastname\\\">Last Name</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"lastname\\\"\\n              placeholder=\\\"Last Name\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && sForm.lastname.errors?.required\\\"\\n            >\\n              Last Name is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username/Email</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"username\\\"\\n              placeholder=\\\"Username/Email\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && sForm.username.errors?.required\\\"\\n            >\\n              Username/Email is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              type=\\\"password\\\"\\n              formControlName=\\\"password\\\"\\n              placeholder=\\\"Password\\\"\\n            />\\n            <div\\n              class=\\\"invalid-feedback\\\"\\n              *ngIf=\\\"submitted && sForm.password.errors?.required\\\"\\n            >\\n              Password is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\">\\n              Register\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, NgZone } from \"@angular/core\";\nimport { AuthService } from \"../service/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  submitted = false;\n  submittedL = false;\n  loginForm: FormGroup;\n  signupForm: FormGroup;\n  errMess: string;\n  alert = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public fb: FormBuilder,\n    private ngZone: NgZone\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      username: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n    });\n    this.signupForm = this.fb.group({\n      firstname: [\"\", [Validators.required]],\n      lastname: [\"\", [Validators.required]],\n      username: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n    });\n  }\n\n  get myForm() {\n    return this.loginForm.controls;\n  }\n  get sForm() {\n    return this.signupForm.controls;\n  }\n\n  onSubmit() {\n    this.submittedL = true;\n    console.log(\"User: \", this.loginForm.value);\n    this.authService.logIn(this.loginForm.value).subscribe(\n      (res) => {\n        if (res.success) {\n          this.router.navigate([\"/reservations-list\"]);\n        } else {\n          console.log(res);\n        }\n      },\n      (error) => {\n        console.log(error);\n        this.errMess = error;\n      }\n    );\n  }\n\n  onSignup() {\n    this.submitted = true;\n    console.log(\"User: \", this.signupForm.value);\n    this.authService.signUp(this.signupForm.value).subscribe(\n      (res) => {\n        if (res.success) {\n          this.alert = true;\n        } else {\n          console.log(res);\n        }\n      },\n      (error) => {\n        console.log(error);\n        this.errMess = error;\n      }\n    );\n  }\n\n  closeAlert() {\n    this.alert = false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Reservation } from \"../model/reservation\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { ProcessHTTPMsgService } from \"./process-httpmsg.service\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiService {\n  baseUri: string = \"http://localhost:8080\";\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n  storeAlert = false;\n\n  constructor(\n    private http: HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService\n  ) {}\n\n  createReservation(data): Observable<any> {\n    let url = `reservations/create-reservation`;\n    return this.http\n      .post(url, data)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getReservations(): Observable<Reservation[]> {\n    return this.http\n      .get<Reservation[]>(`reservations`)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getReservation(id): Observable<any> {\n    let url = `reservations/${id}`;\n    return this.http.get(url, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {};\n      }),\n      catchError(this.processHTTPMsgService.handleError)\n    );\n  }\n\n  updateReservation(id, data): Observable<any> {\n    let url = `reservations/edit-reservation/${id}`;\n    return this.http\n      .put(url, data, { headers: this.headers })\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  deleteReservation(id): Observable<any> {\n    let url = `reservations/delete-reservation/${id}`;\n    return this.http\n      .delete(url, { headers: this.headers })\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  saveAlert(alert) {\n    this.storeAlert = alert;\n  }\n  getAlert() {\n    return this.storeAlert;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuardService {\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    // Get the auth header from the service.\r\n    const authToken = authService.getToken();\r\n    // console.log(\"Interceptor: \" + authToken);\r\n    // Clone the request to add the new header.\r\n    const authReq = req.clone({\r\n      headers: req.headers.set(\"Authorization\", \"bearer \" + authToken),\r\n    });\r\n\r\n    // Pass on the cloned request instead of the original request.\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n  constructor(private inj: Injector) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const authService = this.inj.get(AuthService);\r\n    const authToken = authService.getToken();\r\n\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        (event: HttpEvent<any>) => {\r\n          // do nothing\r\n        },\r\n        (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            if (err.status === 401 && authToken) {\r\n              console.log(\"Unauthorized Interceptor: \", err);\r\n              authService.checkJWTtoken();\r\n            }\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, Subject } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { ProcessHTTPMsgService } from \"./process-httpmsg.service\";\n\ninterface AuthResponse {\n  status: string;\n  success: string;\n  token: string;\n}\n\ninterface JWTResponse {\n  status: string;\n  success: string;\n  user: any;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  tokenKey = \"JWT\";\n  isAuthenticated: Boolean = false;\n  username: Subject<string> = new Subject<string>();\n  authToken: string = undefined;\n  baseUri: string = \"http://localhost:8080\";\n\n  constructor(\n    private http: HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService\n  ) {}\n\n  checkJWTtoken() {\n    this.http.get<JWTResponse>(\"users/checkJWTtoken\").subscribe(\n      (res) => {\n        console.log(\"JWT Token Valid: \", res);\n        this.sendUsername(res.user.username);\n      },\n      (err) => {\n        console.log(\"JWT Token invalid: \", err);\n        this.destroyUserCredentials();\n      }\n    );\n  }\n\n  sendUsername(name: string) {\n    this.username.next(name);\n  }\n\n  clearUsername() {\n    this.username.next(undefined);\n  }\n\n  loadUserCredentials() {\n    const credentials = JSON.parse(localStorage.getItem(this.tokenKey));\n    console.log(\"loadUserCredentials \", credentials);\n    if (credentials && credentials.username !== undefined) {\n      this.useCredentials(credentials);\n      if (this.authToken) {\n        this.checkJWTtoken();\n      }\n    }\n  }\n\n  storeUserCredentials(credentials: any) {\n    console.log(\"storeUserCredentials \", credentials);\n    localStorage.setItem(this.tokenKey, JSON.stringify(credentials));\n    this.useCredentials(credentials);\n  }\n\n  useCredentials(credentials: any) {\n    this.isAuthenticated = true;\n    this.sendUsername(credentials.username);\n    this.authToken = credentials.token;\n  }\n\n  destroyUserCredentials() {\n    this.authToken = undefined;\n    this.clearUsername();\n    this.isAuthenticated = false;\n    localStorage.removeItem(this.tokenKey);\n  }\n\n  signUp(newUser: any): Observable<any> {\n    return this.http\n      .post<AuthResponse>(\"users/signup\", {\n        username: newUser.username,\n        password: newUser.password,\n        firstname: newUser.firstname,\n        lastname: newUser.lastname,\n      })\n      .pipe(\n        map((res) => {\n          this.storeUserCredentials({});\n          return { success: true, username: newUser.username };\n        }),\n        catchError((error) => this.processHTTPMsgService.handleError(error))\n      );\n  }\n\n  logIn(user: any): Observable<any> {\n    return this.http\n      .post<AuthResponse>(\"users/login\", {\n        username: user.username,\n        password: user.password,\n      })\n      .pipe(\n        map((res) => {\n          this.storeUserCredentials({\n            username: user.username,\n            token: res.token,\n          });\n          return { success: true, username: user.username };\n        }),\n        catchError((error) => this.processHTTPMsgService.handleError(error))\n      );\n  }\n\n  logOut() {\n    this.destroyUserCredentials();\n  }\n\n  isLoggedIn(): Boolean {\n    return this.isAuthenticated;\n  }\n\n  getUsername(): Observable<string> {\n    return this.username.asObservable();\n  }\n\n  getToken(): string {\n    return this.authToken;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProcessHTTPMsgService {\n  constructor() {}\n\n  public handleError(error: HttpErrorResponse | any) {\n    let errMsg: string;\n    if (error.error instanceof ErrorEvent) {\n      errMsg = error.error.message;\n    } else {\n      errMsg = `${error.status} - ${error.statusText || \"\"} ${error.error}`;\n    }\n    return throwError(errMsg);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}